{"version":3,"sources":["../../../src/main/routers/profile.js"],"names":["ProfileRouter","app","init","mongoose","connect","db","connection","post","req","res","list","body","data","err","profile","_profiles","i","length","Profile","findOne","belongTo","json","result","splice","profiles","next","findOneAndUpdate","_id","$set","name","newName","description","newDesc","icon","newIcon","new","_updatedProfile","updatedProfile","Router"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;IAEMA,a;;;AAEJ,yBAAYC,GAAZ,EAAgB;AAAA;;AAAA,8HACRA,GADQ;;AAEd,UAAKA,GAAL,GAAWA,GAAX;AACA,UAAKC,IAAL;AAHc;AAIf;;;;2BAEK;AAAA;;AACJ,UAAMD,MAAM,KAAKA,GAAjB;AACAE,yBAASC,OAAT,CAAiB,iCAAjB;AACA,UAAIC,KAAKF,mBAASG,UAAlB;;AAEAL,UAAIM,IAAJ,CAAS,sBAAT;AAAA,2EAAiC,iBAAMC,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AACzBC,sBADyB,GAClBF,IAAIG,IAAJ,CAASC,IADS;AAE/B;;AACIC,qBAH2B,WAGtBC,OAHsB;AAI3BC,2BAJ2B,GAIf,EAJe;AAKvBC,mBALuB,GAKrB,CALqB;;AAAA;AAAA,wBAKnBA,IAAEN,KAAKO,MALY;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAMN,kBAAGC,kBAAQC,OAAR,CAAgB,EAACC,UAAUV,KAAKM,CAAL,CAAX,EAAhB,CAAH,CANM;;AAAA;AAAA;AAAA;AAM5BH,qBAN4B;AAMvBC,yBANuB;;AAAA,uBAO1BD,GAP0B;AAAA;AAAA;AAAA;;AAAA,mDAObJ,IAAIY,IAAJ,CAAS,EAAEC,QAAQ,QAAV,EAAT,CAPa;;AAAA;AAQ7BP,4BAAUQ,MAAV,CAAiB,CAAjB,EAAmB,CAAnB,EAAqBT,OAArB;;AAR6B;AAKLE,qBALK;AAAA;AAAA;;AAAA;AAAA,mDAUxBP,IAAIY,IAAJ,CAAS;AACdC,4BAAO,SADO;AAEdE,8BAAUT;AAFI,mBAAT,CAVwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjC;;AAAA;AAAA;AAAA;AAAA;;AAgBAd,UAAIM,IAAJ,CAAS,iBAAT;AAAA,4EAA4B,kBAAMC,GAAN,EAAWC,GAAX,EAAgBgB,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBb,sBADoB,GACbJ,IAAIG,IAAJ,CAASC,IADI;AAE1B;;AACAM,oCAAQQ,gBAAR,CAAyB,EAACC,KAAKf,KAAKE,OAAL,CAAaa,GAAnB,EAAzB,EAAkD,EAAEC,MAAK;AACvDC,4BAAMjB,KAAKkB,OAAL,GAAclB,KAAKkB,OAAnB,GAA4BlB,KAAKE,OAAL,CAAae,IADQ;AAEvDE,mCAAanB,KAAKoB,OAFqC;AAGvDC,4BAAMrB,KAAKsB,OAAL,GAActB,KAAKsB,OAAnB,GAA4BtB,KAAKE,OAAL,CAAamB;AAHQ,qBAAP,EAAlD,EAII,EAACE,KAAK,IAAN,EAJJ,EAIiB,UAACtB,GAAD,EAAMuB,eAAN,EAAwB;AACvC;AACA,2BAAO3B,IAAIY,IAAJ,CAAS;AACdC,8BAAST,OAAO,CAACuB,eAAT,GAA2B,QAA3B,GAAoC,SAD9B;AAEdC,sCAAgBD;AAFF,qBAAT,CAAP;AAID,mBAVD;;AAH0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA5B;;AAAA;AAAA;AAAA;AAAA;AAgBD;;;;EA7CyBE,gB;;kBAiDbtC,a","file":"profile.js","sourcesContent":["import Router from './Router';\r\nimport path from 'path';\r\nimport mongoose from 'mongoose';\r\nimport to from '../../to';\r\n\r\nimport User from '../../models/User.js';\r\nimport Profile from '../../models/Profile.js';\r\n\r\nclass ProfileRouter extends Router {\r\n\r\n  constructor(app){\r\n    super(app);\r\n    this.app = app;\r\n    this.init();\r\n  }\r\n\r\n  init(){\r\n    const app = this.app;\r\n    mongoose.connect('mongodb://localhost/sitetracker');\r\n    var db = mongoose.connection;\r\n\r\n    app.post('/profile/getMultiple', async(req, res)=>{\r\n      const list = req.body.data;\r\n      //console.log(list);\r\n      let err, profile;\r\n      var _profiles = [];\r\n      for(var i=0;i<list.length;i++){\r\n        [err, profile] = await to(Profile.findOne({belongTo: list[i]}));\r\n        if(err){ return res.json({ result: 'failed' })}\r\n        _profiles.splice(0,0,profile);\r\n      }\r\n      return res.json({\r\n        result:'success',\r\n        profiles: _profiles\r\n      })\r\n    });\r\n\r\n    app.post('/profile/update', async(req, res, next)=>{\r\n      const data = req.body.data;\r\n      //console.log(data)\r\n      Profile.findOneAndUpdate({_id: data.profile._id}, { $set:{\r\n        name: data.newName? data.newName: data.profile.name,\r\n        description: data.newDesc,\r\n        icon: data.newIcon? data.newIcon: data.profile.icon\r\n      }}, {new: true}, (err, _updatedProfile)=>{\r\n        //console.log(_updatedUser)\r\n        return res.json({\r\n          result: (err || !_updatedProfile)? 'failed':'success' ,\r\n          updatedProfile: _updatedProfile\r\n        })\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default ProfileRouter;\r\n"]}