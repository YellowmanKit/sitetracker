{"version":3,"sources":["../../../src/main/routers/school.js"],"names":["SchoolRouter","app","init","mongoose","connect","db","connection","post","req","res","next","schoolId","body","data","err","statistics","Query","getStatistics","json","result","list","school","schools","i","length","School","findById","splice","leaveSchool","leavedSchool","updatedProfile","updatedUser","joinSchool","joinedSchool","editedSchool","findOneAndUpdate","_id","$set","new","addSchool","newSchool","Router"],"mappings":"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","file":"school.js","sourcesContent":["import Router from './Router';\r\nimport path from 'path';\r\nimport mongoose from 'mongoose';\r\nimport to from '../../to';\r\n\r\nimport User from '../../models/User.js';\r\nimport School from '../../models/School.js';\r\n\r\nimport Query from '../../models/Query.js';\r\n\r\nclass SchoolRouter extends Router {\r\n\r\n  constructor(app){\r\n    super(app);\r\n    this.app = app;\r\n    this.init();\r\n  }\r\n\r\n  init(){\r\n    const app = this.app;\r\n    mongoose.connect('mongodb://localhost/sitetracker');\r\n    var db = mongoose.connection;\r\n\r\n    app.post('/school/getStatistics', async(req, res, next)=>{\r\n      const schoolId = req.body.data;\r\n      //console.log(schoolId)\r\n\r\n      let err, statistics;\r\n      [err, statistics] = await Query.getStatistics(schoolId);\r\n      if(err){ return res.json({result: 'failed'})}\r\n      return res.json({result: 'success', statistics: statistics})\r\n\r\n    });\r\n\r\n    app.post('/school/getMultiple', async(req, res)=>{\r\n      const list = req.body.data;\r\n      //console.log(list);\r\n      let err, school;\r\n      var schools = [];\r\n      for(var i=0;i<list.length;i++){\r\n        [err, school] = await to(School.findById(list[i]));\r\n        if(err){ return res.json({ result: 'failed' })}\r\n        schools.splice(0,0,school);\r\n      }\r\n      return res.json({\r\n        result:'success',\r\n        schools: schools\r\n      })\r\n    });\r\n\r\n    app.post('/school/leave', async(req, res, next)=>{\r\n      const data = req.body.data;\r\n      //console.log(data)\r\n\r\n      School.leaveSchool(data, (result, leavedSchool, updatedProfile, updatedUser)=>{\r\n        return res.json({\r\n          result: result,\r\n          leavedSchool: leavedSchool,\r\n          updatedProfile: updatedProfile,\r\n          updatedUser: updatedUser\r\n        })\r\n      })\r\n    });\r\n\r\n    app.post('/school/join', async(req, res, next)=>{\r\n      const data = req.body.data;\r\n      //console.log(data)\r\n\r\n      School.joinSchool(data, (result, joinedSchool, updatedProfile)=>{\r\n        return res.json({\r\n          result: result,\r\n          joinedSchool: joinedSchool,\r\n          updatedProfile: updatedProfile\r\n        })\r\n      })\r\n    });\r\n\r\n    app.post('/school/edit', async(req, res, next)=>{\r\n      const school = req.body.data;\r\n      //console.log(data)\r\n      let err, editedSchool;\r\n      [err, editedSchool] = await to(School.findOneAndUpdate({_id: school._id},{ $set: school}, { new: true }));\r\n\r\n      return res.json({\r\n        result: err? 'failed': 'success',\r\n        editedSchool: editedSchool\r\n      })\r\n    });\r\n\r\n    app.post('/school/add', async(req, res, next)=>{\r\n      const data = req.body.data;\r\n      //console.log(data)\r\n\r\n      School.addSchool(data, (result, newSchool)=>{\r\n        return res.json({\r\n          result: result,\r\n          newSchool: newSchool\r\n        })\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default SchoolRouter;\r\n"]}