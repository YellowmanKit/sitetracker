{"version":3,"sources":["../../../src/main/routers/group.js"],"names":["GroupRouter","app","init","mongoose","connect","db","connection","post","req","res","next","data","body","Group","fetchData","group","result","groupData","profiles","studentProjects","cards","langs","json","joinGroup","newGroup","leaveGroup","addGroup","existedGroup","Router"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;;;IAEMA,W;;;AAEJ,uBAAYC,GAAZ,EAAgB;AAAA;;AAAA,0HACRA,GADQ;;AAEd,UAAKA,GAAL,GAAWA,GAAX;AACA,UAAKC,IAAL;AAHc;AAIf;;;;2BAEK;AAAA;;AACJ,UAAMD,MAAM,KAAKA,GAAjB;AACAE,yBAASC,OAAT,CAAiB,iCAAjB;AACA,UAAIC,KAAKF,mBAASG,UAAlB;;AAEAL,UAAIM,IAAJ,CAAS,kBAAT;AAAA,2EAA6B,iBAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,sBADqB,GACdH,IAAII,IAAJ,CAASD,IADK;AAE3B;;AAEAE,kCAAMC,SAAN,CAAgBH,KAAKI,KAArB,EAA4B,UAACC,MAAD,EAASC,SAAT,EAAoBC,QAApB,EAA8BC,eAA9B,EAA+CC,KAA/C,EAAsDC,KAAtD,EAA8D;AACxF,2BAAOZ,IAAIa,IAAJ,CAAS;AACdN,8BAAQA,MADM;AAEdC,iCAAWA,SAFG;AAGdC,gCAAUA,QAHI;AAIdC,uCAAiBA,eAJH;AAKdC,6BAAOA,KALO;AAMdC,6BAAOA;AANO,qBAAT,CAAP;AAQD,mBATD;;AAJ2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA7B;;AAAA;AAAA;AAAA;AAAA;;AAgBApB,UAAIM,IAAJ,CAAS,aAAT;AAAA,4EAAwB,kBAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,sBADgB,GACTH,IAAII,IAAJ,CAASD,IADA;AAEtB;;AAEAE,kCAAMU,SAAN,CAAgBZ,IAAhB,EAAsB,UAACK,MAAD,EAASQ,QAAT,EAAoB;AACxC,2BAAOf,IAAIa,IAAJ,CAAS;AACdN,8BAAQA,MADM;AAEdD,6BAAOS;AAFO,qBAAT,CAAP;AAID,mBALD;;AAJsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAxB;;AAAA;AAAA;AAAA;AAAA;;AAYAvB,UAAIM,IAAJ,CAAS,cAAT;AAAA,4EAAyB,kBAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,sBADiB,GACVH,IAAII,IAAJ,CAASD,IADC;AAEvB;;AAEAE,kCAAMY,UAAN,CAAiBd,IAAjB,EAAuB,UAACK,MAAD,EAASQ,QAAT,EAAoB;AACzC,2BAAOf,IAAIa,IAAJ,CAAS;AACdN,8BAAQA,MADM;AAEdD,6BAAOS;AAFO,qBAAT,CAAP;AAID,mBALD;;AAJuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAzB;;AAAA;AAAA;AAAA;AAAA;;AAYAvB,UAAIM,IAAJ,CAAS,YAAT;AAAA,4EAAuB,kBAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,sBADe,GACRH,IAAII,IAAJ,CAASD,IADD;AAErB;;AAEAE,kCAAMa,QAAN,CAAef,IAAf,EAAqB,UAACK,MAAD,EAASQ,QAAT,EAAmBG,YAAnB,EAAkC;AACrD,2BAAOlB,IAAIa,IAAJ,CAAS;AACdN,8BAAQA,MADM;AAEdD,6BAAOS,QAFO;AAGdG,oCAAcA;AAHA,qBAAT,CAAP;AAKD,mBAND;;AAJqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvB;;AAAA;AAAA;AAAA;AAAA;AAYD;;;;EAjEuBC,gB;;kBAqEX5B,W","file":"group.js","sourcesContent":["import Router from './Router';\r\nimport path from 'path';\r\nimport mongoose from 'mongoose';\r\nimport to from '../../to';\r\n\r\nimport Group from '../../models/Group.js';\r\n\r\nclass GroupRouter extends Router {\r\n\r\n  constructor(app){\r\n    super(app);\r\n    this.app = app;\r\n    this.init();\r\n  }\r\n\r\n  init(){\r\n    const app = this.app;\r\n    mongoose.connect('mongodb://localhost/sitetracker');\r\n    var db = mongoose.connection;\r\n\r\n    app.post('/group/fetchData', async(req, res, next)=>{\r\n      const data = req.body.data;\r\n      //console.log(data)\r\n\r\n      Group.fetchData(data.group, (result, groupData, profiles, studentProjects, cards, langs)=>{\r\n        return res.json({\r\n          result: result,\r\n          groupData: groupData,\r\n          profiles: profiles,\r\n          studentProjects: studentProjects,\r\n          cards: cards,\r\n          langs: langs\r\n        })\r\n      })\r\n    });\r\n\r\n    app.post('/group/join', async(req, res, next)=>{\r\n      const data = req.body.data;\r\n      //console.log(data)\r\n\r\n      Group.joinGroup(data, (result, newGroup)=>{\r\n        return res.json({\r\n          result: result,\r\n          group: newGroup\r\n        })\r\n      })\r\n    });\r\n\r\n    app.post('/group/leave', async(req, res, next)=>{\r\n      const data = req.body.data;\r\n      //console.log(data)\r\n\r\n      Group.leaveGroup(data, (result, newGroup)=>{\r\n        return res.json({\r\n          result: result,\r\n          group: newGroup\r\n        })\r\n      })\r\n    });\r\n\r\n    app.post('/group/add', async(req, res, next)=>{\r\n      const data = req.body.data;\r\n      //console.log(data)\r\n\r\n      Group.addGroup(data, (result, newGroup, existedGroup)=>{\r\n        return res.json({\r\n          result: result,\r\n          group: newGroup,\r\n          existedGroup: existedGroup\r\n        })\r\n      })\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default GroupRouter;\r\n"]}