{"version":3,"sources":["../../../src/main/routers/subject.js"],"names":["SubjectRouter","app","init","mongoose","connect","db","connection","post","req","res","profile","body","data","err","studentProjects","project","subject","card","projects","subjects","StudentProject","find","student","belongTo","console","log","json","result","studentProjectsList","subjectsList","i","length","cards","skip","j","Card","findById","_id","grade","push","Project","Subject","indexOf","updatedProfile","list","splice","next","editedSubject","findOneAndUpdate","$set","new","newSubject","updatedCourse","create","Course","course","$push","cb","Router"],"mappings":"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","file":"subject.js","sourcesContent":["import Router from './Router';\r\nimport path from 'path';\r\nimport mongoose from 'mongoose';\r\nimport to from '../../to';\r\n\r\nimport User from '../../models/User.js';\r\nimport Course from '../../models/Course.js';\r\nimport Project from '../../models/Project.js';\r\nimport Subject from '../../models/Subject.js';\r\nimport StudentProject from '../../models/StudentProject.js';\r\nimport Card from '../../models/Card.js';\r\n\r\nimport Log from '../../models/Log.js';\r\n\r\nclass SubjectRouter extends Router {\r\n\r\n  constructor(app){\r\n    super(app);\r\n    this.app = app;\r\n    this.init();\r\n  }\r\n\r\n  init(){\r\n    const app = this.app;\r\n    mongoose.connect('mongodb://localhost/sitetracker');\r\n    var db = mongoose.connection;\r\n\r\n    app.post('/subject/getAllOfUser', async(req, res)=>{\r\n      const profile = req.body.data;\r\n      //console.log(profile);\r\n      let err, studentProjects, project, subject, card;\r\n      var projects = [];\r\n      var subjects = [];\r\n\r\n      [err, studentProjects] = await to(StudentProject.find({student: profile.belongTo}));\r\n      if(err || studentProjects === null){ console.log('failed to get student project'); return res.json({ result: 'failed' })}\r\n      //console.log(studentProjects);\r\n      var studentProjectsList = [];\r\n      var subjectsList = [];\r\n      for(var i=0;i<studentProjects.length;i++){\r\n        const cards = studentProjects[i].cards;\r\n        if(cards.length === 0){ continue; }\r\n\r\n        var skip = false;\r\n        for(var j=0;j<cards.length;j++){\r\n          [err, card] = await to(Card.findById(cards[j]._id));\r\n          if(err || !card){ continue; }\r\n          if(card.grade === 'featured'){ break; }\r\n          if(j === cards.length - 1){ skip = true; }\r\n        }\r\n        if(skip){ continue; }\r\n\r\n        studentProjectsList.push(studentProjects[i]._id);\r\n\r\n        [err, project] = await to(Project.findById(studentProjects[i].project));\r\n        if(err || project === null){ console.log('failed to get project'); return res.json({ result: 'failed' })}\r\n        projects.push(project);\r\n\r\n        [err, subject] = await to(Subject.findById(project.subject));\r\n        if(err || subject === null){\r\n          console.log('failed to get subject');\r\n          continue;\r\n        }\r\n        subjects.push(subject);\r\n        if(!(subjectsList.indexOf('' + subject._id) > -1)){\r\n          subjectsList.push('' + subject._id);\r\n        }\r\n      }\r\n\r\n      var updatedProfile = profile;\r\n      updatedProfile.subjects = subjectsList;\r\n      updatedProfile.studentProjects = studentProjectsList;\r\n\r\n      return res.json({\r\n        result: 'success',\r\n        subjects: subjects,\r\n        projects: projects,\r\n        studentProjects: studentProjects,\r\n        profile: updatedProfile\r\n      })\r\n    });\r\n\r\n    app.post('/subject/getMultiple', async(req, res)=>{\r\n      const list = req.body.data;\r\n      //console.log(list);\r\n      let err, subject;\r\n      var subjects = [];\r\n      for(var i=0;i<list.length;i++){\r\n        [err, subject] = await to(Subject.findById(list[i]));\r\n        if(err){ return res.json({ result: 'failed' })}\r\n        subjects.splice(0,0,subject);\r\n      }\r\n      return res.json({\r\n        result:'success',\r\n        subjects: subjects\r\n      })\r\n    });\r\n\r\n    app.post('/subject/edit', async(req, res, next)=>{\r\n      const subject = req.body.data;\r\n      //console.log(data)\r\n      let err, editedSubject;\r\n      [err, editedSubject] = await to(Subject.findOneAndUpdate({_id: subject._id},{ $set: subject }, { new: true }));\r\n\r\n      return res.json({\r\n        result: err? 'failed': 'success',\r\n        editedSubject: editedSubject\r\n      })\r\n    });\r\n\r\n    app.post('/subject/add', async(req, res)=>{\r\n      const subject = req.body.data.subject;\r\n      //console.log(subject);\r\n      let err, newSubject, updatedCourse;\r\n      [err, newSubject] = await to(Subject.create(subject))\r\n      if(err){ return res.json({ result: 'failed' })}\r\n\r\n      [err, updatedCourse] = await to(Course.findOneAndUpdate({_id: subject.course}, { $push: {\r\n        subjects: newSubject._id\r\n      }}, {new: true}))\r\n      if(err || updatedCourse === null){ cb('failed'); };\r\n\r\n      //Log.create({ user: data.userId, type: 'addSubject' });\r\n\r\n      return res.json({\r\n        result:'success',\r\n        newSubject: newSubject,\r\n        updatedCourse: updatedCourse\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default SubjectRouter;\r\n"]}