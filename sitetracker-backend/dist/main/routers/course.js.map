{"version":3,"sources":["../../../src/main/routers/course.js"],"names":["CourseRouter","app","init","mongoose","connect","db","connection","post","req","res","next","profile","body","data","err","course","subject","project","studentProject","courses","teachingCourses","Course","find","teacher","belongTo","sort","createdAt","console","log","json","result","i","length","push","_id","leaveCourse","leavedCourse","updatedProfile","joinCourse","joinedCourse","editedCourse","findOneAndUpdate","$set","icon","title","endDate","new","addCourse","newCourse","Router"],"mappings":"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","file":"course.js","sourcesContent":["import Router from './Router';\r\nimport path from 'path';\r\nimport mongoose from 'mongoose';\r\nimport to from '../../to';\r\n\r\nimport User from '../../models/User.js';\r\nimport Course from '../../models/Course.js';\r\n\r\nclass CourseRouter extends Router {\r\n\r\n  constructor(app){\r\n    super(app);\r\n    this.app = app;\r\n    this.init();\r\n  }\r\n\r\n  init(){\r\n    const app = this.app;\r\n    mongoose.connect('mongodb://localhost/sitetracker');\r\n    var db = mongoose.connection;\r\n\r\n    app.post('/course/getAllOfTeacher', async(req, res, next)=>{\r\n      const profile = req.body.data;\r\n      //console.log(data)\r\n\r\n      let err, course, subject, project, studentProject;\r\n      var courses = [];\r\n      var teachingCourses = [];\r\n\r\n      [err, courses] = await to(Course.find({teacher: profile.belongTo}, null, {sort: {createdAt: 'descending'}}));\r\n      if(err || courses === null){ console.log('failed to getcourses'); return res.json({ result: 'failed' })}\r\n      //console.log(courses);\r\n      for(var i=0;i<courses.length;i++){\r\n        teachingCourses.push(courses[i]._id);\r\n      }\r\n      profile['teachingCourses'] = teachingCourses;\r\n\r\n      return res.json({\r\n        result: 'success',\r\n        courses: courses,\r\n        profile: profile\r\n      })\r\n\r\n    });\r\n\r\n    app.post('/course/leave', async(req, res, next)=>{\r\n      const data = req.body.data;\r\n      //console.log(data)\r\n\r\n      Course.leaveCourse(data, (result, leavedCourse, updatedProfile)=>{\r\n        return res.json({\r\n          result: result,\r\n          leavedCourse: leavedCourse,\r\n          updatedProfile: updatedProfile\r\n        })\r\n      })\r\n    });\r\n\r\n    app.post('/course/join', async(req, res, next)=>{\r\n      const data = req.body.data;\r\n      //console.log(data)\r\n\r\n      Course.joinCourse(data, (result, joinedCourse, updatedProfile)=>{\r\n        return res.json({\r\n          result: result,\r\n          joinedCourse: joinedCourse,\r\n          updatedProfile: updatedProfile\r\n        })\r\n      })\r\n    });\r\n\r\n    app.post('/course/edit', async(req, res, next)=>{\r\n      const course = req.body.data;\r\n      //console.log(data)\r\n      let err, editedCourse;\r\n      [err, editedCourse] = await to(Course.findOneAndUpdate({_id: course._id},{ $set: {\r\n        icon: course.icon,\r\n        title: course.title,\r\n        endDate: course.endDate\r\n      }}, { new: true }));\r\n\r\n      return res.json({\r\n        result: err? 'failed': 'success',\r\n        editedCourse: editedCourse\r\n      })\r\n    });\r\n\r\n    app.post('/course/add', async(req, res, next)=>{\r\n      const data = req.body.data;\r\n      //console.log(data)\r\n\r\n      Course.addCourse(data, (result, newCourse)=>{\r\n        return res.json({\r\n          result: result,\r\n          newCourse: newCourse\r\n        })\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default CourseRouter;\r\n"]}