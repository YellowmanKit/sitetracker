{"version":3,"sources":["../../src/models/StudentProject.js"],"names":["ObjectId","mongoose","Schema","Types","studentProjectSchema","project","type","required","student","createdAt","Date","default","cards","StudentProject","module","exports","model","getByProjects","projects","err","studentProject","studentProjectsId","studentProjects","i","length","findById","push"],"mappings":";;;;AAAA;;;;AACA;;;;;;;;;;AAEA,IAAIA,WAAWC,mBAASC,MAAT,CAAgBC,KAAhB,CAAsBH,QAArC;AACA,IAAII,uBAAuBH,mBAASC,MAAT,CAAgB;AACzCG,WAAS;AACPC,UAAMN,QADC;AAEPO,cAAU;AAFH,GADgC;AAKzCC,WAAS;AACPF,UAAMN,QADC;AAEPO,cAAU;AAFH,GALgC;AASzCE,aAAW;AACTH,UAAMI,IADG;AAETC,aAAS,IAAID,IAAJ;AAFA,GAT8B;AAazCE,SAAO,CAACZ,QAAD;AAbkC,CAAhB,CAA3B;;AAgBA,IAAIa,iBAAiBC,OAAOC,OAAP,GAAiBd,mBAASe,KAAT,CAAe,gBAAf,EAAiCZ,oBAAjC,CAAtC;;AAEAU,OAAOC,OAAP,CAAeE,aAAf;AAAA,qEAA+B,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACzBC,eADyB,WACpBC,cADoB;AAEzBC,6BAFyB,GAEL,EAFK;AAGzBC,2BAHyB,GAGP,EAHO;;;AAK7B,iBAAQC,CAAR,GAAU,CAAV,EAAYA,IAAEL,SAASM,MAAvB,EAA8BD,GAA9B,EAAkC;AAChCF,+DAAwBA,iBAAxB,sBAA8CH,SAASK,CAAT,EAAYD,eAA1D;AACD;;AAEOC,aATqB,GASnB,CATmB;;AAAA;AAAA,kBASjBA,IAAEF,kBAAkBG,MATH;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAUG,kBAAGX,eAAeY,QAAf,CAAwBJ,kBAAkBE,CAAlB,CAAxB,CAAH,CAVH;;AAAA;AAAA;AAAA;AAU1BJ,eAV0B;AAUrBC,0BAVqB;;AAW3BE,4BAAgBI,IAAhB,CAAqBN,cAArB;;AAX2B;AASUG,eATV;AAAA;AAAA;;AAAA;AAAA,6CActB,CAACJ,GAAD,EAAMG,eAAN,EAAuBD,iBAAvB,CAdsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA","file":"StudentProject.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport to from '../to';\r\n\r\nvar ObjectId = mongoose.Schema.Types.ObjectId;\r\nvar studentProjectSchema = mongoose.Schema({\r\n  project: {\r\n    type: ObjectId,\r\n    required: true\r\n  },\r\n  student: {\r\n    type: ObjectId,\r\n    required: true\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    default: new Date()\r\n  },\r\n  cards: [ObjectId]\r\n})\r\n\r\nvar StudentProject = module.exports = mongoose.model('studentProject', studentProjectSchema);\r\n\r\nmodule.exports.getByProjects = async (projects) =>{\r\n  let err, studentProject;\r\n  let studentProjectsId = [];\r\n  let studentProjects = [];\r\n\r\n  for(var i=0;i<projects.length;i++){\r\n    studentProjectsId = [...studentProjectsId, ...projects[i].studentProjects];\r\n  }\r\n\r\n  for(var i=0;i<studentProjectsId.length;i++){\r\n    [err, studentProject] = await to(StudentProject.findById(studentProjectsId[i]));\r\n    studentProjects.push(studentProject)\r\n  }\r\n\r\n  return [err, studentProjects, studentProjectsId];\r\n}\r\n"]}