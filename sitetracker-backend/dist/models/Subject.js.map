{"version":3,"sources":["../../src/models/Subject.js"],"names":["ObjectId","mongoose","Schema","Types","subjectSchema","course","type","required","projects","icon","String","title","description","default","createdAt","Date","Subject","module","exports","model","getByCourses","courses","all","err","subject","subjectsId","subjects","i","length","Model","outDated","endDate","findById","push"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;AAEA,IAAIA,WAAWC,mBAASC,MAAT,CAAgBC,KAAhB,CAAsBH,QAArC;AACA,IAAII,gBAAgBH,mBAASC,MAAT,CAAgB;AAClCG,UAAQ;AACNC,UAAMN,QADA;AAENO,cAAU;AAFJ,GAD0B;AAKlCC,YAAU;AACRF,UAAM,CAACN,QAAD;AADE,GALwB;AAQlCS,QAAM;AACJH,UAAMI;AADF,GAR4B;AAWlCC,SAAO;AACLL,UAAMI,MADD;AAELH,cAAU;AAFL,GAX2B;AAelCK,eAAa;AACXN,UAAMI,MADK;AAEXG,aAAS;AAFE,GAfqB;AAmBlCC,aAAW;AACTR,UAAMS,IADG;AAETF,aAAS,IAAIE,IAAJ;AAFA;AAnBuB,CAAhB,CAApB;;AAyBA,IAAIC,UAAUC,OAAOC,OAAP,GAAiBjB,mBAASkB,KAAT,CAAe,SAAf,EAAyBf,aAAzB,CAA/B;;AAEAa,OAAOC,OAAP,CAAeE,YAAf;AAAA,qEAA8B,iBAAOC,OAAP,EAAgBC,GAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACxBC,eADwB,WACnBC,OADmB;AAExBC,sBAFwB,GAEX,EAFW;AAGxBC,oBAHwB,GAGb,EAHa;AAKpBC,aALoB,GAKlB,CALkB;;AAAA;AAAA,kBAKhBA,IAAEN,QAAQO,MALM;AAAA;AAAA;AAAA;;AAAA,kBAMvB,CAACN,GAAD,IAAQO,gBAAMC,QAAN,CAAeT,QAAQM,CAAR,EAAWI,OAA1B,CANe;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAO1BN,sDAAiBA,UAAjB,sBAAgCJ,QAAQM,CAAR,EAAWD,QAA3C;;AAP0B;AAKCC,eALD;AAAA;AAAA;;AAAA;AAUpBA,aAVoB,GAUlB,CAVkB;;AAAA;AAAA,kBAUhBA,IAAEF,WAAWG,MAVG;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAWH,kBAAGZ,QAAQgB,QAAR,CAAiBP,WAAWE,CAAX,CAAjB,CAAH,CAXG;;AAAA;AAAA;AAAA;AAWzBJ,eAXyB;AAWpBC,mBAXoB;;AAY1BE,qBAASO,IAAT,CAAcT,OAAd;;AAZ0B;AAUIG,eAVJ;AAAA;AAAA;;AAAA;AAAA,6CAerB,CAACJ,GAAD,EAAMG,QAAN,EAAgBD,UAAhB,CAfqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA","file":"Subject.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport Model from './Model';\r\nimport to from '../to';\r\n\r\nvar ObjectId = mongoose.Schema.Types.ObjectId;\r\nvar subjectSchema = mongoose.Schema({\r\n  course: {\r\n    type: ObjectId,\r\n    required: true\r\n  },\r\n  projects: {\r\n    type: [ObjectId]\r\n  },\r\n  icon: {\r\n    type: String\r\n  },\r\n  title: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  description: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    default: new Date()\r\n  }\r\n})\r\n\r\nvar Subject = module.exports = mongoose.model('subject',subjectSchema);\r\n\r\nmodule.exports.getByCourses = async (courses, all) =>{\r\n  let err, subject;\r\n  let subjectsId = [];\r\n  let subjects = [];\r\n\r\n  for(var i=0;i<courses.length;i++){\r\n    if(!all && Model.outDated(courses[i].endDate)){ continue; }\r\n    subjectsId = [...subjectsId, ...courses[i].subjects];\r\n  }\r\n\r\n  for(var i=0;i<subjectsId.length;i++){\r\n    [err, subject] = await to(Subject.findById(subjectsId[i]));\r\n    subjects.push(subject)\r\n  }\r\n\r\n  return [err, subjects, subjectsId];\r\n}\r\n"]}