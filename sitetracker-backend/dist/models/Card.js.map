{"version":3,"sources":["../../src/models/Card.js"],"names":["ObjectId","mongoose","Schema","Types","cardSchema","studentProject","type","icon","String","required","comment","default","audioComment","grade","author","createdAt","Date","resubmitted","Boolean","studentRead","langs","geoLocated","altitude","latitude","longitude","Card","module","exports","model","getByStudentProjects","studentProjects","err","card","cardsId","cards","i","length","findById","push","getByProjects","projects","studentProjectsId","featured","StudentProject"],"mappings":"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","file":"Card.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport StudentProject from './StudentProject';\r\nimport to from'../to';\r\n\r\nvar ObjectId = mongoose.Schema.Types.ObjectId;\r\nvar cardSchema = mongoose.Schema({\r\n  studentProject: {\r\n    type: ObjectId\r\n  },\r\n  icon: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  comment: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  audioComment: {\r\n    type: String\r\n  },\r\n  grade: {\r\n    type: String,\r\n    default: 'notGraded'\r\n  },\r\n  author: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    default: new Date()\r\n  },\r\n  resubmitted: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  studentRead: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  langs: [ObjectId],\r\n  geoLocated: {\r\n    altitude: { type: String },\r\n    latitude: { type: String },\r\n    longitude: { type: String }\r\n  }\r\n})\r\n\r\nvar Card = module.exports = mongoose.model('card',cardSchema);\r\n\r\nmodule.exports.getByStudentProjects = async (studentProjects)=>{\r\n  let err, card;\r\n  let cardsId = [];\r\n  let cards = [];\r\n\r\n  for(var i=0;i<studentProjects.length;i++){\r\n    cardsId = [...cardsId, ...studentProjects[i].cards];\r\n  }\r\n\r\n  for(var i=0;i<cardsId.length;i++){\r\n    [err, card] = await to(Card.findById(cardsId[i]));\r\n    cards.push(card)\r\n  }\r\n\r\n  return [err, cards, cardsId];\r\n}\r\n\r\nmodule.exports.getByProjects = async (projects)=>{\r\n  let err, studentProject, card;\r\n  let studentProjectsId = [];\r\n  let cardsId = [];\r\n  let cards = [];\r\n  let featured = 0;\r\n\r\n  for(var i=0;i<projects.length;i++){\r\n    studentProjectsId = [...studentProjectsId, ...projects[i].studentProjects];\r\n  }\r\n\r\n  for(var i=0;i<studentProjectsId.length;i++){\r\n    [err, studentProject] = await to(StudentProject.findById(studentProjectsId[i]));\r\n    cardsId = [...cardsId, ...studentProject.cards];\r\n  }\r\n\r\n  for(var i=0;i<cardsId.length;i++){\r\n    [err, card] = await to(Card.findById(cardsId[i]));\r\n    cards = [...cards, card];\r\n    if(card.grade === 'featured'){ featured++; }\r\n  }\r\n\r\n  return [err, cards, cardsId, featured];\r\n}\r\n"]}