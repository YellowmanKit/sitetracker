{"version":3,"sources":["../../src/models/School.js"],"names":["ObjectId","mongoose","Schema","Types","schoolSchema","admin","type","required","icon","String","name","description","default","createdAt","Date","code","joinedTeachers","School","module","exports","model","getByUser","userId","profile","err","school","schools","supervisingSchools","joinedSchools","find","res","json","result","i","length","push","_id","findById","leaveSchool","data","cb","schoolToLeave","updatedProfile","updatedUser","findOneAndUpdate","$pull","new","Profile","belongTo","User","$set","joinSchool","schoolToJoin","$push","addSchool","newSchool","newCode","randomString","generate","charset","findOne","create","console","log","codeExist"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;AAEA,IAAIA,WAAWC,mBAASC,MAAT,CAAgBC,KAAhB,CAAsBH,QAArC;AACA,IAAII,eAAeH,mBAASC,MAAT,CAAgB;AACjCG,SAAO;AACLC,UAAMN,QADD;AAELO,cAAU;AAFL,GAD0B;AAKjCC,QAAM;AACJF,UAAMG;AADF,GAL2B;AAQjCC,QAAM;AACJJ,UAAMG,MADF;AAEJF,cAAU;AAFN,GAR2B;AAYjCI,eAAa;AACXL,UAAMG,MADK;AAEXG,aAAS;AAFE,GAZoB;AAgBjCC,aAAW;AACTP,UAAMQ,IADG;AAETF,aAAS,IAAIE,IAAJ;AAFA,GAhBsB;AAoBjCC,QAAM;AACJT,UAAMG,MADF;AAEJF,cAAU;AAFN,GApB2B;AAwBjCS,kBAAgB,CAAChB,QAAD;AAxBiB,CAAhB,CAAnB;;AA2BA,IAAIiB,SAASC,OAAOC,OAAP,GAAiBlB,mBAASmB,KAAT,CAAe,QAAf,EAAwBhB,YAAxB,CAA9B;;AAEAc,OAAOC,OAAP,CAAeE,SAAf;AAAA,qEAA2B,iBAAOC,MAAP,EAAeC,OAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACrBC,eADqB,WAChBC,MADgB;AAErBC,mBAFqB,GAEX,EAFW;AAGrBC,8BAHqB,GAGA,EAHA;AAIrBC,yBAJqB,GAILL,QAAQK,aAJH;AAAA;AAAA,mBAMF,kBAAGX,OAAOY,IAAP,CAAY,EAACxB,OAAOiB,MAAR,EAAZ,CAAH,CANE;;AAAA;AAAA;AAAA;AAMxBE,eANwB;AAMnBE,mBANmB;;AAAA,kBAOtBF,OAAOE,YAAY,IAPG;AAAA;AAAA;AAAA;;AAAA,6CAOWI,IAAIC,IAAJ,CAAS,EAAEC,QAAQ,QAAV,EAAT,CAPX;;AAAA;AAQzB,iBAAQC,CAAR,GAAU,CAAV,EAAYA,IAAEP,QAAQQ,MAAtB,EAA6BD,GAA7B,EAAiC;AAC/BN,iCAAmBQ,IAAnB,CAAwBT,QAAQO,CAAR,EAAWG,GAAnC;AACD;;AAEOH,aAZiB,GAYf,CAZe;;AAAA;AAAA,kBAYbA,IAAEL,cAAcM,MAZH;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAaD,kBAAGjB,OAAOoB,QAAP,CAAgBT,cAAcK,CAAd,CAAhB,CAAH,CAbC;;AAAA;AAAA;AAAA;AAatBT,eAbsB;AAajBC,kBAbiB;;AAcvBC,mDAAcA,OAAd,IAAuBD,MAAvB;;AAduB;AAYUQ,eAZV;AAAA;AAAA;;AAAA;AAAA,6CAiBlB,CAACT,GAAD,EAAME,OAAN,EAAeC,kBAAf,CAjBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;;AAoBAT,OAAOC,OAAP,CAAemB,WAAf;AAAA,sEAA6B,kBAAOC,IAAP,EAAaC,EAAb;AAAA;;AAAA;AAAA;AAAA;AAAA;AACvBhB,eADuB,WAClBiB,aADkB,WACHC,cADG,WACaC,WADb;AAAA;AAAA,mBAGE,kBAAG1B,OAAO2B,gBAAP,CAAwB,EAAC7B,MAAMwB,KAAKxB,IAAZ,EAAxB,EAA2C,EAAE8B,OAAO;AAClF7B,gCAAgBuB,KAAKjB;AAD6D,eAAT,EAA3C,EAE5B,EAACwB,KAAK,IAAN,EAF4B,CAAH,CAHF;;AAAA;AAAA;AAAA;AAG1BtB,eAH0B;AAGrBiB,yBAHqB;;AAM3B,gBAAGjB,OAAOiB,kBAAkB,IAA5B,EAAiC;AAAED,iBAAG,QAAH;AAAe;;AANvB;AAAA,mBAQG,kBAAGO,kBAAQH,gBAAR,CAAyB,EAACI,UAAUT,KAAKjB,MAAhB,EAAzB,EAAkD,EAAEuB,OAAO;AAC1FjB,+BAAea,cAAcL;AAD6D,eAAT,EAAlD,EAE7B,EAACU,KAAK,IAAN,EAF6B,CAAH,CARH;;AAAA;AAAA;AAAA;AAQ1BtB,eAR0B;AAQrBkB,0BARqB;;AAW3B,gBAAGlB,OAAOkB,mBAAmB,IAA7B,EAAkC;AAAEF,iBAAG,QAAH;AAAe;;AAXxB,kBAaxBE,eAAed,aAAf,CAA6BM,MAA7B,KAAwC,CAbhB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAcE,kBAAGe,KAAKL,gBAAL,CAAsB,EAACR,KAAKG,KAAKjB,MAAX,EAAtB,EAA0C,EAAE4B,MAAM;AAC9E5C,sBAAM;AADwE,eAAR,EAA1C,EAE1B,EAACwC,KAAK,IAAN,EAF0B,CAAH,CAdF;;AAAA;AAAA;AAAA;AAcxBtB,eAdwB;AAcnBmB,uBAdmB;;AAiBzB,gBAAGnB,OAAOmB,gBAAgB,IAA1B,EAA+B;AAAEH,iBAAG,QAAH;AAAe;;AAjBvB;;AAoB3BA,eAAG,SAAH,EAAcC,aAAd,EAA6BC,cAA7B,EAA6CC,WAA7C;;AApB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA;;AAuBAzB,OAAOC,OAAP,CAAegC,UAAf;AAAA,uEAA4B,kBAAOZ,IAAP,EAAaC,EAAb;AAAA;;AAAA;AAAA;AAAA;AAAA;AACtBhB,eADsB,WACjB4B,YADiB,WACHV,cADG;AAAA;AAAA,mBAGE,kBAAGzB,OAAO2B,gBAAP,CAAwB,EAAC7B,MAAMwB,KAAKxB,IAAZ,EAAxB,EAA2C,EAAEsC,OAAO;AACjFrC,gCAAgBuB,KAAKjB;AAD4D,eAAT,EAA3C,EAE3B,EAACwB,KAAK,IAAN,EAF2B,CAAH,CAHF;;AAAA;AAAA;AAAA;AAGzBtB,eAHyB;AAGpB4B,wBAHoB;;AAM1B,gBAAG5B,OAAO4B,iBAAiB,IAA3B,EAAgC;AAAEZ,iBAAG,QAAH;AAAe;;AANvB;AAAA,mBAQI,kBAAGO,kBAAQH,gBAAR,CAAyB,EAACI,UAAUT,KAAKjB,MAAhB,EAAzB,EAAkD,EAAE+B,OAAO;AAC1FzB,+BAAewB,aAAahB;AAD8D,eAAT,EAAlD,EAE7B,EAACU,KAAK,IAAN,EAF6B,CAAH,CARJ;;AAAA;AAAA;AAAA;AAQzBtB,eARyB;AAQpBkB,0BARoB;;AAW1B,gBAAGlB,OAAOkB,mBAAmB,IAA7B,EAAkC;AAAEF,iBAAG,QAAH;AAAe;;AAEnDA,eAAG,SAAH,EAAcY,YAAd,EAA4BV,cAA5B;;AAb0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAgBAxB,OAAOC,OAAP,CAAemC,SAAf;AAAA,uEAA2B,kBAAOC,SAAP,EAAkBf,EAAlB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACrBhB,eADqB,WAChBC,MADgB;AAGrB+B,mBAHqB,GAGX,EAHW;AAIjBvB,aAJiB,GAIf,CAJe;;AAAA;AAAA,kBAIbA,IAAE,EAJW;AAAA;AAAA;AAAA;;AAKvBuB,sBAAUC,uBAAaC,QAAb,CAAsB;AAC9BxB,sBAAQ,CADsB;AAE9ByB,uBAAS;AAFqB,aAAtB,CAAV;;AALuB;AAAA,mBAUD,kBAAG1C,OAAO2C,OAAP,CAAe,EAAC7C,MAAMyC,OAAP,EAAf,CAAH,CAVC;;AAAA;AAAA;AAAA;AAUtBhC,eAVsB;AAUjBC,kBAViB;;AAAA,kBAWpB,CAACD,GAAD,IAAQC,WAAW,IAXC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAWc;;AAXd;AAIRQ,eAJQ;AAAA;AAAA;;AAAA;;AAczBsB,sBAAU,MAAV,IAAoBC,OAApB;;AAdyB;AAAA,mBAgBH,kBAAGvC,OAAO4C,MAAP,CAAcN,SAAd,CAAH,CAhBG;;AAAA;AAAA;AAAA;AAgBxB/B,eAhBwB;AAgBnBC,kBAhBmB;;AAAA,iBAiBtBD,GAjBsB;AAAA;AAAA;AAAA;;AAiBhBgB,eAAG,QAAH,EAAcsB,QAAQC,GAAR,CAAYvC,GAAZ,EAjBE;;AAAA;;AAmBzB;AACAgB,eAAG,SAAH,EAAcf,MAAd;;AApByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;;AAuBAP,OAAOC,OAAP,CAAe6C,SAAf;AAAA,uEAA2B,kBAAOjD,IAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACrBS,eADqB,WAChBC,MADgB;AAAA;AAAA,mBAEH,kBAAGR,OAAO2C,OAAP,CAAe,EAAC7C,MAAMA,IAAP,EAAf,CAAH,CAFG;;AAAA;AAAA;AAAA;AAExBS,eAFwB;AAEnBC,kBAFmB;;AAAA,kBAGtBD,OAAO,CAACC,MAHc;AAAA;AAAA;AAAA;;AAAA,8CAGE,KAHF;;AAAA;AAAA,8CAIlB,IAJkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA","file":"School.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport randomString from'randomstring';\r\nimport to from'../to';\r\n\r\nimport Profile from './Profile';\r\n\r\nvar ObjectId = mongoose.Schema.Types.ObjectId;\r\nvar schoolSchema = mongoose.Schema({\r\n  admin: {\r\n    type: ObjectId,\r\n    required: true\r\n  },\r\n  icon: {\r\n    type: String\r\n  },\r\n  name: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  description: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    default: new Date()\r\n  },\r\n  code: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  joinedTeachers: [ObjectId]\r\n})\r\n\r\nvar School = module.exports = mongoose.model('school',schoolSchema);\r\n\r\nmodule.exports.getByUser = async (userId, profile) =>{\r\n  let err, school;\r\n  let schools = [];\r\n  let supervisingSchools = [];\r\n  let joinedSchools = profile.joinedSchools;\r\n\r\n  [err, schools] = await(to(School.find({admin: userId})));\r\n  if(err || schools === null){ return res.json({ result: \"failed\" });}\r\n  for(var i=0;i<schools.length;i++){\r\n    supervisingSchools.push(schools[i]._id);\r\n  }\r\n\r\n  for(var i=0;i<joinedSchools.length;i++){\r\n    [err, school] = await to(School.findById(joinedSchools[i]));\r\n    schools = [...schools, school];\r\n  }\r\n\r\n  return [err, schools, supervisingSchools];\r\n}\r\n\r\nmodule.exports.leaveSchool = async (data, cb)=>{\r\n  let err, schoolToLeave, updatedProfile, updatedUser;\r\n\r\n  [err, schoolToLeave] = await to(School.findOneAndUpdate({code: data.code}, { $pull: {\r\n    joinedTeachers: data.userId\r\n  }}, {new: true}))\r\n  if(err || schoolToLeave === null){ cb('failed'); };\r\n\r\n  [err, updatedProfile] = await to(Profile.findOneAndUpdate({belongTo: data.userId}, { $pull: {\r\n    joinedSchools: schoolToLeave._id\r\n  }}, {new: true}))\r\n  if(err || updatedProfile === null){ cb('failed'); };\r\n\r\n  if(updatedProfile.joinedSchools.length === 0){\r\n    [err, updatedUser] = await to(User.findOneAndUpdate({_id: data.userId}, { $set: {\r\n      type: 'student'\r\n    }}, {new: true}))\r\n    if(err || updatedUser === null){ cb('failed'); };\r\n  }\r\n\r\n  cb('success', schoolToLeave, updatedProfile, updatedUser)\r\n}\r\n\r\nmodule.exports.joinSchool = async (data, cb)=>{\r\n  let err, schoolToJoin, updatedProfile;\r\n\r\n  [err, schoolToJoin] = await to(School.findOneAndUpdate({code: data.code}, { $push: {\r\n    joinedTeachers: data.userId\r\n  }}, {new: true}))\r\n  if(err || schoolToJoin === null){ cb('failed'); };\r\n\r\n  [err, updatedProfile] = await to(Profile.findOneAndUpdate({belongTo: data.userId}, { $push: {\r\n    joinedSchools: schoolToJoin._id\r\n  }}, {new: true}))\r\n  if(err || updatedProfile === null){ cb('failed'); };\r\n\r\n  cb('success', schoolToJoin, updatedProfile)\r\n}\r\n\r\nmodule.exports.addSchool = async (newSchool, cb)=>{\r\n  let err, school;\r\n\r\n  var newCode = '';\r\n  for(var i=0;i<99;i++){\r\n    newCode = randomString.generate({\r\n      length: 5,\r\n      charset: 'ABCDEFGHJKMNOPQRSTUVWXYZ1234567890'\r\n    });\r\n\r\n    [err, school] = await to(School.findOne({code: newCode}));\r\n    if(!err && school === null){ break; };\r\n  }\r\n\r\n  newSchool['code'] = newCode;\r\n\r\n  [err, school] = await to(School.create(newSchool));\r\n  if(err){ cb('failed'); console.log(err); return; }\r\n\r\n  //console.log(School)\r\n  cb('success', school)\r\n}\r\n\r\nmodule.exports.codeExist = async (code)=>{\r\n  let err, school;\r\n  [err, school] = await to(School.findOne({code: code}));\r\n  if(err || !school){ return false; }\r\n  return true;\r\n}\r\n"]}