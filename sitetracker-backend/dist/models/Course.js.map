{"version":3,"sources":["../../src/models/Course.js"],"names":["ObjectId","mongoose","Schema","Types","courseSchema","teacher","type","required","icon","String","title","createdAt","Date","default","endDate","code","joinedStudents","subjects","Course","module","exports","model","getBySchool","school","err","data","coursesId","courses","teachers","joinedTeachers","i","length","find","_id","getTeaching","teacherId","course","teachingCourses","sort","push","getJoined","joinedCourses","profile","profiles","findById","Profile","findOne","belongTo","leaveCourse","cb","courseToLeave","updatedProfile","findOneAndUpdate","$pull","userId","new","joinCourse","courseToJoin","indexOf","$push","addCourse","newCourse","newCode","randomString","generate","charset","create","console","log","codeExist"],"mappings":"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","file":"Course.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport randomString from'randomstring';\r\nimport Model from './Model';\r\nimport to from '../to';\r\n\r\nimport Profile from './Profile';\r\n\r\nvar ObjectId = mongoose.Schema.Types.ObjectId;\r\nvar courseSchema = mongoose.Schema({\r\n  teacher: {\r\n    type: ObjectId,\r\n    required: true\r\n  },\r\n  icon: {\r\n    type: String\r\n  },\r\n  title: {\r\n    type: String\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    default: new Date()\r\n  },\r\n  endDate: {\r\n    type: Date,\r\n    default: new Date()\r\n  },\r\n  code: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  joinedStudents: [ObjectId],\r\n  subjects: [ObjectId]\r\n})\r\n\r\nvar Course = module.exports = mongoose.model('course',courseSchema);\r\n\r\nmodule.exports.getBySchool = async (school)=>{\r\n  let err, data;\r\n  let coursesId = [];\r\n  let courses = [];\r\n\r\n  const teachers = school.joinedTeachers;\r\n  for(var i=0;i<teachers.length;i++){\r\n    [err, data] = await to(Course.find({teacher: teachers[i]}));\r\n    courses = [...courses, ...data];\r\n  }\r\n  for(var i=0;i<courses.length;i++){\r\n    coursesId = [...coursesId, courses[i]._id];\r\n  }\r\n  return [err, courses, coursesId];\r\n}\r\n\r\nmodule.exports.getTeaching = async (teacherId)=>{\r\n  let err, course;\r\n  let courses = [];\r\n  let teachingCourses = [];\r\n\r\n  [err, courses] = await to(Course.find({teacher: teacherId}, null, {sort: {endDate: 'descending'}}));\r\n  for(var i=0;i<courses.length;i++){\r\n    teachingCourses.push(courses[i]._id);\r\n  }\r\n\r\n  return [err, courses, teachingCourses];\r\n}\r\n\r\nmodule.exports.getJoined = async (joinedCourses)=>{\r\n  let err, course, profile;\r\n  let courses = [];\r\n  let profiles = [];\r\n\r\n  for(var i=0;i<joinedCourses.length;i++){\r\n    [err, course] = await to(Course.findById(joinedCourses[i]));\r\n    if(err || course === null){ return ['error']; }\r\n\r\n    courses.push(course);\r\n\r\n    [err, profile] = await to(Profile.findOne({belongTo: course.teacher}));\r\n    if(err || profile === null){ return ['error']; }\r\n    profiles.push(profile);\r\n  }\r\n\r\n  return [err, courses, profiles];\r\n}\r\n\r\nmodule.exports.leaveCourse = async (data, cb)=>{\r\n  let err, courseToLeave, updatedProfile;\r\n\r\n  [err, courseToLeave] = await to(Course.findOneAndUpdate({code: data.code}, { $pull: {\r\n    joinedStudents: data.userId\r\n  }}, {new: true}))\r\n  if(err || courseToLeave === null){ cb('failed'); };\r\n\r\n  [err, updatedProfile] = await to(Profile.findOneAndUpdate({belongTo: data.userId}, { $pull: {\r\n    joinedCourses: courseToLeave._id\r\n  }}, {new: true}))\r\n  if(err || updatedProfile === null){ cb('failed'); };\r\n\r\n  cb('success', courseToLeave, updatedProfile)\r\n}\r\n\r\nmodule.exports.joinCourse = async (data, cb)=>{\r\n  let err, courseToJoin, updatedProfile;\r\n\r\n  [err, courseToJoin] = await to(Course.findOne({code: data.code}));\r\n  if(err || courseToJoin === null){ cb('failed'); };\r\n\r\n  if(courseToJoin.joinedStudents.indexOf(data.userId) > -1){ cb('failed - course already joined'); return; }\r\n\r\n  [err, courseToJoin] = await to(Course.findOneAndUpdate({code: data.code}, { $push: {\r\n    joinedStudents: data.userId\r\n  }}, {new: true}))\r\n  if(err || courseToJoin === null){ cb('failed'); };\r\n\r\n  [err, updatedProfile] = await to(Profile.findOneAndUpdate({belongTo: data.userId}, { $push: {\r\n    joinedCourses: courseToJoin._id\r\n  }}, {new: true}))\r\n  if(err || updatedProfile === null){ cb('failed'); };\r\n\r\n  cb('success', courseToJoin, updatedProfile);\r\n}\r\n\r\nmodule.exports.addCourse = async (newCourse, cb)=>{\r\n  let err, course;\r\n\r\n  var newCode = '';\r\n  for(var i=0;i<99;i++){\r\n    newCode = randomString.generate({\r\n      length: 5,\r\n      charset: 'ABCDEFGHJKMNOPQRSTUVWXYZ1234567890'\r\n    });\r\n\r\n    [err,course] = await to(Course.findOne({code: newCode}));\r\n    if(!err && course === null){ break; };\r\n  }\r\n\r\n  newCourse['code'] = newCode;\r\n\r\n  [err, course] = await to(Course.create(newCourse));\r\n  if(err){ cb('failed'); console.log(err); return; }\r\n\r\n  //console.log(course)\r\n  cb('success', course)\r\n}\r\n\r\nmodule.exports.codeExist = async (code)=>{\r\n  let err, course;\r\n  [err, course] = await to(Course.findOne({code: code}));\r\n  if(err || !course){ return false; }\r\n  return true;\r\n}\r\n"]}